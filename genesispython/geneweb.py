import streamlit as st
import re
import json
import os
import zipfile
from io import BytesIO
import time
from datetime import datetime

# C·∫•u h√¨nh trang
st.set_page_config(
    page_title="Project Genesis - Text to Website",
    page_icon="üåê",
    layout="wide",
    initial_sidebar_state="expanded"
)

# CSS t√πy ch·ªânh
st.markdown("""
<style>
    .main-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        padding: 2rem;
        border-radius: 10px;
        color: white;
        text-align: center;
        margin-bottom: 2rem;
    }
    
    .feature-card {
        background: #f8f9fa;
        padding: 1.5rem;
        border-radius: 10px;
        border-left: 4px solid #667eea;
        margin: 1rem 0;
    }
    
    .success-box {
        background: #d4edda;
        border: 1px solid #c3e6cb;
        color: #155724;
        padding: 1rem;
        border-radius: 5px;
        margin: 1rem 0;
    }
    
    .code-preview {
        background: #f8f9fa;
        border: 1px solid #e9ecef;
        border-radius: 5px;
        padding: 1rem;
        font-family: 'Courier New', monospace;
        font-size: 12px;
        max-height: 400px;
        overflow-y: auto;
    }
</style>
""", unsafe_allow_html=True)

class WebsiteGenerator:
    def __init__(self):
        self.templates = {
            'c·ª≠a h√†ng': {
                'type': 'ecommerce',
                'sections': ['header', 'hero', 'products', 'about', 'contact', 'footer'],
                'primary_color': '#e91e63',
                'secondary_color': '#ffffff'
            },
            'nh√† h√†ng': {
                'type': 'restaurant', 
                'sections': ['header', 'hero', 'menu', 'about', 'contact', 'footer'],
                'primary_color': '#ff5722',
                'secondary_color': '#ffffff'
            },
            'c√¥ng ty': {
                'type': 'corporate',
                'sections': ['header', 'hero', 'services', 'about', 'team', 'contact', 'footer'],
                'primary_color': '#2196f3',
                'secondary_color': '#ffffff'
            },
            'c√° nh√¢n': {
                'type': 'portfolio',
                'sections': ['header', 'hero', 'portfolio', 'skills', 'contact', 'footer'],
                'primary_color': '#9c27b0',
                'secondary_color': '#ffffff'
            },
            'blog': {
                'type': 'blog',
                'sections': ['header', 'hero', 'posts', 'about', 'contact', 'footer'],
                'primary_color': '#795548',
                'secondary_color': '#ffffff'
            }
        }
        
        self.color_map = {
            'ƒë·ªè': '#e53e3e', 'xanh': '#3182ce', 'v√†ng': '#d69e2e',
            'h·ªìng': '#ed64a6', 't√≠m': '#805ad5', 'cam': '#dd6b20',
            'xanh l√°': '#38a169', 'xanh l·ª•c': '#38a169',
            'ƒëen': '#1a202c', 'tr·∫Øng': '#ffffff', 'x√°m': '#718096'
        }
    
    def analyze_input(self, user_input):
        """Ph√¢n t√≠ch ƒë·∫ßu v√†o c·ªßa ng∆∞·ªùi d√πng v√† tr√≠ch xu·∫•t th√¥ng tin"""
        lower_input = user_input.lower()
        
        # Tr√≠ch xu·∫•t t√™n website
        site_name = "My Website"
        name_patterns = [
            r't√™n[\s]*(?:l√†|:)?[\s]*[\'"]?([^\'".,\n]+)[\'"]?',
            r'g·ªçi l√†[\s]*[\'"]?([^\'".,\n]+)[\'"]?',
            r'c√≥ t√™n[\s]*[\'"]?([^\'".,\n]+)[\'"]?'
        ]
        
        for pattern in name_patterns:
            match = re.search(pattern, user_input, re.IGNORECASE)
            if match:
                site_name = match.group(1).strip()
                break
        
        # X√°c ƒë·ªãnh lo·∫°i website
        website_type = 'corporate'
        template_info = self.templates['c√¥ng ty']
        
        for key, template in self.templates.items():
            if key in lower_input:
                website_type = template['type']
                template_info = template
                break
        
        # Tr√≠ch xu·∫•t m√†u s·∫Øc
        primary_color = template_info['primary_color']
        for color_name, color_code in self.color_map.items():
            if color_name in lower_input:
                primary_color = color_code
                break
        
        # Ph√¢n t√≠ch t√≠nh nƒÉng
        features = {
            'has_products': any(word in lower_input for word in ['s·∫£n ph·∫©m', 'b√°n', 'mua', 'shop']),
            'has_menu': any(word in lower_input for word in ['th·ª±c ƒë∆°n', 'm√≥n ƒÉn', 'menu', 'ƒë·ªì ƒÉn']),
            'has_services': any(word in lower_input for word in ['d·ªãch v·ª•', 'ph·ª•c v·ª•', 'service']),
            'has_portfolio': any(word in lower_input for word in ['portfolio', 'd·ª± √°n', 'work', 't√°c ph·∫©m']),
            'has_blog': any(word in lower_input for word in ['blog', 'b√†i vi·∫øt', 'tin t·ª©c', 'news']),
            'has_gallery': any(word in lower_input for word in ['gallery', 'h√¨nh ·∫£nh', '·∫£nh']),
            'has_contact_form': 'li√™n h·ªá' in lower_input or 'contact' in lower_input,
        }
        
        # Tr√≠ch xu·∫•t m√¥ t·∫£
        description = f"Website {website_type} chuy√™n nghi·ªáp v·ªõi thi·∫øt k·∫ø hi·ªán ƒë·∫°i"
        desc_patterns = [
            r'm√¥ t·∫£[\s]*:?[\s]*([^\n]+)',
            r'gi·ªõi thi·ªáu[\s]*:?[\s]*([^\n]+)'
        ]
        
        for pattern in desc_patterns:
            match = re.search(pattern, user_input, re.IGNORECASE)
            if match:
                description = match.group(1).strip()
                break
        
        return {
            'site_name': site_name,
            'website_type': website_type,
            'primary_color': primary_color,
            'secondary_color': template_info['secondary_color'],
            'sections': template_info['sections'],
            'features': features,
            'description': description,
            'user_input': user_input
        }
    
    def generate_html(self, spec):
        """T·∫°o m√£ HTML t·ª´ th√¥ng s·ªë k·ªπ thu·∫≠t"""
        html_template = f"""<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{spec['site_name']}</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
</head>
<body>
    <header class="header">
        <nav class="navbar">
            <div class="nav-brand">
                <h1>{spec['site_name']}</h1>
            </div>
            <ul class="nav-menu">
                <li><a href="#home">Trang ch·ªß</a></li>
                {self._generate_nav_items(spec['features'])}
                <li><a href="#about">Gi·ªõi thi·ªáu</a></li>
                <li><a href="#contact">Li√™n h·ªá</a></li>
            </ul>
            <div class="hamburger">
                <span></span>
                <span></span>
                <span></span>
            </div>
        </nav>
    </header>

    <section id="home" class="hero">
        <div class="hero-content">
            <h1 class="hero-title">Ch√†o m·ª´ng ƒë·∫øn v·ªõi {spec['site_name']}</h1>
            <p class="hero-description">{spec['description']}</p>
            <div class="hero-buttons">
                <a href="#contact" class="btn btn-primary">Li√™n h·ªá ngay</a>
                <a href="#about" class="btn btn-secondary">T√¨m hi·ªÉu th√™m</a>
            </div>
        </div>
        <div class="hero-animation">
            <div class="floating-shapes">
                <div class="shape shape-1"></div>
                <div class="shape shape-2"></div>
                <div class="shape shape-3"></div>
            </div>
        </div>
    </section>

    {self._generate_content_sections(spec)}

    <section id="contact" class="contact">
        <div class="container">
            <h2 class="section-title">Li√™n h·ªá v·ªõi ch√∫ng t√¥i</h2>
            <div class="contact-content">
                <div class="contact-info">
                    <div class="contact-item">
                        <i class="fas fa-map-marker-alt"></i>
                        <div>
                            <h4>ƒê·ªãa ch·ªâ</h4>
                            <p>123 ƒê∆∞·ªùng ABC, Qu·∫≠n 1, TP.HCM</p>
                        </div>
                    </div>
                    <div class="contact-item">
                        <i class="fas fa-phone"></i>
                        <div>
                            <h4>ƒêi·ªán tho·∫°i</h4>
                            <p>0123 456 789</p>
                        </div>
                    </div>
                    <div class="contact-item">
                        <i class="fas fa-envelope"></i>
                        <div>
                            <h4>Email</h4>
                            <p>info@{spec['site_name'].lower().replace(' ', '')}.com</p>
                        </div>
                    </div>
                </div>
                {self._generate_contact_form() if spec['features']['has_contact_form'] else ''}
            </div>
        </div>
    </section>

    <footer class="footer">
        <div class="container">
            <div class="footer-content">
                <div class="footer-section">
                    <h3>{spec['site_name']}</h3>
                    <p>C·∫£m ∆°n b·∫°n ƒë√£ tin t∆∞·ªüng v√† s·ª≠ d·ª•ng d·ªãch v·ª• c·ªßa ch√∫ng t√¥i.</p>
                </div>
                <div class="footer-section">
                    <h4>Li√™n k·∫øt nhanh</h4>
                    <ul>
                        <li><a href="#home">Trang ch·ªß</a></li>
                        <li><a href="#about">Gi·ªõi thi·ªáu</a></li>
                        <li><a href="#contact">Li√™n h·ªá</a></li>
                    </ul>
                </div>
                <div class="footer-section">
                    <h4>Theo d√µi ch√∫ng t√¥i</h4>
                    <div class="social-links">
                        <a href="#"><i class="fab fa-facebook"></i></a>
                        <a href="#"><i class="fab fa-instagram"></i></a>
                        <a href="#"><i class="fab fa-twitter"></i></a>
                    </div>
                </div>
            </div>
            <div class="footer-bottom">
                <p>&copy; 2024 {spec['site_name']}. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
            </div>
        </div>
    </footer>

    <script src="script.js"></script>
</body>
</html>"""
        return html_template
    
    def generate_css(self, spec):
        """T·∫°o m√£ CSS t·ª´ th√¥ng s·ªë k·ªπ thu·∫≠t"""
        css_template = f"""/* Reset v√† Base Styles */
* {{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}}

body {{
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    line-height: 1.6;
    color: #333;
    overflow-x: hidden;
}}

.container {{
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
}}

/* Header Styles */
.header {{
    background: {spec['primary_color']};
    position: fixed;
    top: 0;
    width: 100%;
    z-index: 1000;
    transition: all 0.3s ease;
    box-shadow: 0 2px 20px rgba(0,0,0,0.1);
}}

.navbar {{
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 2rem;
}}

.nav-brand h1 {{
    color: white;
    font-size: 1.8rem;
    font-weight: bold;
}}

.nav-menu {{
    display: flex;
    list-style: none;
    gap: 2rem;
}}

.nav-menu a {{
    color: white;
    text-decoration: none;
    font-weight: 500;
    transition: all 0.3s ease;
    position: relative;
}}

.nav-menu a:hover {{
    color: #f0f0f0;
}}

.nav-menu a::after {{
    content: '';
    position: absolute;
    bottom: -5px;
    left: 0;
    width: 0;
    height: 2px;
    background: white;
    transition: width 0.3s ease;
}}

.nav-menu a:hover::after {{
    width: 100%;
}}

/* Hero Section */
.hero {{
    background: linear-gradient(135deg, {spec['primary_color']}22, {spec['primary_color']}44);
    min-height: 100vh;
    display: flex;
    align-items: center;
    position: relative;
    overflow: hidden;
}}

.hero-content {{
    max-width: 600px;
    z-index: 2;
    padding: 2rem;
}}

.hero-title {{
    font-size: 3.5rem;
    font-weight: bold;
    color: {spec['primary_color']};
    margin-bottom: 1rem;
    line-height: 1.2;
}}

.hero-description {{
    font-size: 1.3rem;
    color: #666;
    margin-bottom: 2rem;
    line-height: 1.6;
}}

.hero-buttons {{
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
}}

.btn {{
    display: inline-block;
    padding: 12px 30px;
    border-radius: 50px;
    text-decoration: none;
    font-weight: 600;
    transition: all 0.3s ease;
    cursor: pointer;
    border: none;
}}

.btn-primary {{
    background: {spec['primary_color']};
    color: white;
}}

.btn-primary:hover {{
    background: {spec['primary_color']}dd;
    transform: translateY(-2px);
    box-shadow: 0 10px 20px rgba(0,0,0,0.2);
}}

.btn-secondary {{
    background: transparent;
    color: {spec['primary_color']};
    border: 2px solid {spec['primary_color']};
}}

.btn-secondary:hover {{
    background: {spec['primary_color']};
    color: white;
}}

/* Floating Animation */
.floating-shapes {{
    position: absolute;
    top: 0;
    right: 0;
    width: 50%;
    height: 100%;
    z-index: 1;
}}

.shape {{
    position: absolute;
    border-radius: 50%;
    opacity: 0.1;
    animation: float 6s ease-in-out infinite;
}}

.shape-1 {{
    width: 200px;
    height: 200px;
    background: {spec['primary_color']};
    top: 20%;
    right: 20%;
    animation-delay: 0s;
}}

.shape-2 {{
    width: 150px;
    height: 150px;
    background: {spec['primary_color']};
    top: 60%;
    right: 40%;
    animation-delay: 2s;
}}

.shape-3 {{
    width: 100px;
    height: 100px;
    background: {spec['primary_color']};
    top: 40%;
    right: 10%;
    animation-delay: 4s;
}}

@keyframes float {{
    0%, 100% {{ transform: translateY(0px) rotate(0deg); }}
    50% {{ transform: translateY(-20px) rotate(180deg); }}
}}

/* Sections */
section {{
    padding: 80px 0;
}}

.section-title {{
    text-align: center;
    font-size: 2.5rem;
    color: {spec['primary_color']};
    margin-bottom: 3rem;
    position: relative;
}}

.section-title::after {{
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 80px;
    height: 3px;
    background: {spec['primary_color']};
}}

.grid {{
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
    margin-top: 2rem;
}}

.card {{
    background: white;
    padding: 2rem;
    border-radius: 15px;
    box-shadow: 0 10px 30px rgba(0,0,0,0.1);
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
}}

.card::before {{
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 4px;
    background: {spec['primary_color']};
}}

.card:hover {{
    transform: translateY(-10px);
    box-shadow: 0 20px 40px rgba(0,0,0,0.15);
}}

.card h3 {{
    color: {spec['primary_color']};
    margin-bottom: 1rem;
    font-size: 1.3rem;
}}

.card p {{
    color: #666;
    line-height: 1.6;
}}

/* Contact Section */
.contact {{
    background: #f8f9fa;
}}

.contact-content {{
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 3rem;
    align-items: start;
}}

.contact-info {{
    display: flex;
    flex-direction: column;
    gap: 2rem;
}}

.contact-item {{
    display: flex;
    align-items: center;
    gap: 1rem;
}}

.contact-item i {{
    font-size: 1.5rem;
    color: {spec['primary_color']};
    min-width: 30px;
}}

.contact-form {{
    background: white;
    padding: 2rem;
    border-radius: 15px;
    box-shadow: 0 10px 30px rgba(0,0,0,0.1);
}}

.form-group {{
    margin-bottom: 1.5rem;
}}

.form-group label {{
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 600;
    color: #333;
}}

.form-group input,
.form-group textarea {{
    width: 100%;
    padding: 12px;
    border: 2px solid #e9ecef;
    border-radius: 8px;
    font-size: 1rem;
    transition: border-color 0.3s ease;
}}

.form-group input:focus,
.form-group textarea:focus {{
    outline: none;
    border-color: {spec['primary_color']};
}}

/* Footer */
.footer {{
    background: #333;
    color: white;
    padding: 3rem 0 1rem;
}}

.footer-content {{
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 2rem;
    margin-bottom: 2rem;
}}

.footer-section h3,
.footer-section h4 {{
    margin-bottom: 1rem;
    color: {spec['primary_color']};
}}

.footer-section ul {{
    list-style: none;
}}

.footer-section ul li {{
    margin-bottom: 0.5rem;
}}

.footer-section ul li a {{
    color: #ccc;
    text-decoration: none;
    transition: color 0.3s ease;
}}

.footer-section ul li a:hover {{
    color: white;
}}

.social-links {{
    display: flex;
    gap: 1rem;
}}

.social-links a {{
    display: inline-block;
    width: 40px;
    height: 40px;
    background: {spec['primary_color']};
    color: white;
    text-align: center;
    line-height: 40px;
    border-radius: 50%;
    transition: transform 0.3s ease;
}}

.social-links a:hover {{
    transform: translateY(-2px);
}}

.footer-bottom {{
    text-align: center;
    padding-top: 2rem;
    border-top: 1px solid #555;
    color: #ccc;
}}

/* Responsive Design */
.hamburger {{
    display: none;
    flex-direction: column;
    cursor: pointer;
}}

.hamburger span {{
    width: 25px;
    height: 3px;
    background: white;
    margin: 3px 0;
    transition: 0.3s;
}}

@media (max-width: 768px) {{
    .hamburger {{
        display: flex;
    }}
    
    .nav-menu {{
        position: fixed;
        left: -100%;
        top: 70px;
        flex-direction: column;
        background-color: {spec['primary_color']};
        width: 100%;
        text-align: center;
        transition: 0.3s;
        padding: 2rem 0;
    }}
    
    .nav-menu.active {{
        left: 0;
    }}
    
    .hero-title {{
        font-size: 2.5rem;
    }}
    
    .hero-buttons {{
        justify-content: center;
    }}
    
    .contact-content {{
        grid-template-columns: 1fr;
    }}
    
    .grid {{
        grid-template-columns: 1fr;
    }}
}}

/* Animation Classes */
.fade-in {{
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.8s ease;
}}

.fade-in.active {{
    opacity: 1;
    transform: translateY(0);
}}

/* Scroll Animation */
@keyframes slideInUp {{
    from {{
        opacity: 0;
        transform: translateY(50px);
    }}
    to {{
        opacity: 1;
        transform: translateY(0);
    }}
}}

.animate-on-scroll {{
    opacity: 0;
    animation: slideInUp 0.8s ease forwards;
}}"""
        return css_template
    
    def generate_js(self, spec):
        """T·∫°o m√£ JavaScript t·ª´ th√¥ng s·ªë k·ªπ thu·∫≠t"""
        js_template = """// Mobile Menu Toggle
const hamburger = document.querySelector('.hamburger');
const navMenu = document.querySelector('.nav-menu');

hamburger.addEventListener('click', () => {
    hamburger.classList.toggle('active');
    navMenu.classList.toggle('active');
});

// Close mobile menu when clicking on a link
document.querySelectorAll('.nav-menu a').forEach(n => n.addEventListener('click', () => {
    hamburger.classList.remove('active');
    navMenu.classList.remove('active');
}));

// Smooth Scrolling
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const target = document.querySelector(this.getAttribute('href'));
        if (target) {
            target.scrollIntoView({
                behavior: 'smooth',
                block: 'start'
            });
        }
    });
});

// Header Background on Scroll
window.addEventListener('scroll', () => {
    const header = document.querySelector('.header');
    if (window.scrollY > 100) {
        header.style.background = 'rgba(33, 150, 243, 0.95)';
        header.style.backdropFilter = 'blur(10px)';
    } else {
        // Fallback to the primary color from CSS or a default if not found
        // This assumes --primary-color is set in :root or body, which is not directly from spec in CSS,
        // so we'll make a slight adjustment to the JS to use the dynamic color.
        // For simplicity, we hardcode the common primary color for now,
        // but in a real app, this would be dynamically set.
        header.style.background = '""" + spec['primary_color'] + """'; 
        header.style.backdropFilter = 'none';
    }
});


// Scroll Animation
const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
};

const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
        if (entry.isIntersecting) {
            entry.target.classList.add('active');
        }
    });
}, observerOptions);

// Observe elements for animation
document.querySelectorAll('.card, .contact-item, .hero-content').forEach(el => {
    el.classList.add('fade-in');
    observer.observe(el);
});

// Form Submission
const contactForm = document.querySelector('.contact-form form');
if (contactForm) {
    contactForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        // Get form data
        const formData = new FormData(this);
        const data = Object.fromEntries(formData);
        
        // Simple validation
        if (!data.name || !data.email || !data.message) {
            alert('Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin!');
            return;
        }
        
        // Simulate form submission
        const submitBtn = this.querySelector('button[type="submit"]');
        const originalText = submitBtn.textContent;
        submitBtn.textContent = 'ƒêang g·ª≠i...';
        submitBtn.disabled = true;
        
        setTimeout(() => {
            alert('C·∫£m ∆°n b·∫°n ƒë√£ li√™n h·ªá! Ch√∫ng t√¥i s·∫Ω ph·∫£n h·ªìi s·ªõm nh·∫•t c√≥ th·ªÉ.');
            this.reset();
            submitBtn.textContent = originalText;
            submitBtn.disabled = false;
        }, 2000);
    });
}

// Typing Effect for Hero Title
function typeWriter(element, text, speed = 100) {
    let i = 0;
    element.innerHTML = '';
    
    function typing() {
        if (i < text.length) {
            element.innerHTML += text.charAt(i);
            i++;
            setTimeout(typing, speed);
        }
    }
    
    typing();
}

// Initialize typing effect when page loads
window.addEventListener('load', () => {
    const heroTitle = document.querySelector('.hero-title');
    if (heroTitle) {
        const originalText = heroTitle.textContent;
        typeWriter(heroTitle, originalText, 80);
    }
});

// Parallax Effect for Hero Section
window.addEventListener('scroll', () => {
    const scrolled = window.pageYOffset;
    const parallax = document.querySelector('.hero');
    const speed = scrolled * 0.2; // Adjust speed as needed
    
    if (parallax) {
        parallax.style.transform = `translateY(${speed}px)`;
    }
});


// Add loading animation
document.addEventListener('DOMContentLoaded', function() {
    // Remove loading class if exists
    document.body.classList.remove('loading');
    
    // Add entrance animations
    setTimeout(() => {
        document.querySelectorAll('.fade-in').forEach((el, index) => {
            setTimeout(() => {
                el.classList.add('active');
            }, index * 100);
        });
    }, 300);
});

// Dynamic year in footer
const currentYear = new Date().getFullYear();
const yearElement = document.querySelector('.footer-bottom p');
if (yearElement) {
    yearElement.innerHTML = yearElement.innerHTML.replace('2024', currentYear);
}
"""
        return js_template
    
    def _generate_nav_items(self, features):
        """T·∫°o c√°c m·ª•c navigation d·ª±a tr√™n t√≠nh nƒÉng"""
        nav_items = []
        if features['has_products']:
            nav_items.append('<li><a href="#products">S·∫£n ph·∫©m</a></li>')
        if features['has_menu']:
            nav_items.append('<li><a href="#menu">Th·ª±c ƒë∆°n</a></li>')
        if features['has_services']:
            nav_items.append('<li><a href="#services">D·ªãch v·ª•</a></li>')
        if features['has_portfolio']:
            nav_items.append('<li><a href="#portfolio">Portfolio</a></li>')
        if features['has_blog']:
            nav_items.append('<li><a href="#blog">Blog</a></li>')
        if features['has_gallery']:
            nav_items.append('<li><a href="#gallery">Th∆∞ vi·ªán</a></li>')
        
        return '\n                '.join(nav_items)
    
    def _generate_content_sections(self, spec):
        """T·∫°o c√°c section n·ªôi dung d·ª±a tr√™n t√≠nh nƒÉng"""
        sections = []
        features = spec['features']
        
        if 'about' in spec['sections']:
            sections.append(f"""
    <section id="about" class="about">
        <div class="container">
            <h2 class="section-title">V·ªÅ ch√∫ng t√¥i</h2>
            <div class="grid">
                <div class="card fade-in">
                    <h3>S·ª© m·ªánh c·ªßa ch√∫ng t√¥i</h3>
                    <p>Ch√∫ng t√¥i cam k·∫øt cung c·∫•p c√°c gi·∫£i ph√°p website ch·∫•t l∆∞·ª£ng cao, d·ªÖ s·ª≠ d·ª•ng v√† hi·ªáu qu·∫£, gi√∫p doanh nghi·ªáp v√† c√° nh√¢n ph√°t tri·ªÉn tr·ª±c tuy·∫øn.</p>
                </div>
                <div class="card fade-in">
                    <h3>T·∫ßm nh√¨n</h3>
                    <p>Tr·ªü th√†nh n·ªÅn t·∫£ng h√†ng ƒë·∫ßu trong vi·ªác chuy·ªÉn ƒë·ªïi √Ω t∆∞·ªüng th√†nh website m·ªôt c√°ch nhanh ch√≥ng v√† th√¥ng minh, lo·∫°i b·ªè r√†o c·∫£n k·ªπ thu·∫≠t.</p>
                </div>
                <div class="card fade-in">
                    <h3>Gi√° tr·ªã c·ªët l√µi</h3>
                    <p>S√°ng t·∫°o, T·∫≠n t√¢m, Hi·ªáu qu·∫£, H·ªó tr·ª£ kh√°ch h√†ng v∆∞·ª£t tr·ªôi. Ch√∫ng t√¥i lu√¥n l·∫Øng nghe v√† c·∫£i thi·ªán ƒë·ªÉ ƒë√°p ·ª©ng m·ªçi nhu c·∫ßu.</p>
                </div>
            </div>
        </div>
    </section>""")

        if features['has_products']:
            sections.append(f"""
    <section id="products" class="products">
        <div class="container">
            <h2 class="section-title">S·∫£n ph·∫©m c·ªßa ch√∫ng t√¥i</h2>
            <div class="grid">
                <div class="card fade-in">
                    <img src="https://via.placeholder.com/300x200?text=S·∫£n+Ph·∫©m+1" alt="Product 1">
                    <h3>S·∫£n ph·∫©m 1</h3>
                    <p>M√¥ t·∫£ ng·∫Øn g·ªçn v·ªÅ s·∫£n ph·∫©m 1. ƒê√¢y l√† m·ªôt s·∫£n ph·∫©m tuy·ªát v·ªùi m√† b·∫°n s·∫Ω y√™u th√≠ch.</p>
                    <a href="#" class="btn btn-primary">Xem chi ti·∫øt</a>
                </div>
                <div class="card fade-in">
                    <img src="https://via.placeholder.com/300x200?text=S·∫£n+Ph·∫©m+2" alt="Product 2">
                    <h3>S·∫£n ph·∫©m 2</h3>
                    <p>M√¥ t·∫£ ng·∫Øn g·ªçn v·ªÅ s·∫£n ph·∫©m 2. S·∫£n ph·∫©m n√†y c√≥ nhi·ªÅu t√≠nh nƒÉng ƒë·ªôc ƒë√°o.</p>
                    <a href="#" class="btn btn-primary">Xem chi ti·∫øt</a>
                </div>
                <div class="card fade-in">
                    <img src="https://via.placeholder.com/300x200?text=S·∫£n+Ph·∫©m+3" alt="Product 3">
                    <h3>S·∫£n ph·∫©m 3</h3>
                    <p>M√¥ t·∫£ ng·∫Øn g·ªçn v·ªÅ s·∫£n ph·∫©m 3. ƒê·∫£m b·∫£o ch·∫•t l∆∞·ª£ng v√† gi√° c·∫£ ph·∫£i chƒÉng.</p>
                    <a href="#" class="btn btn-primary">Xem chi ti·∫øt</a>
                </div>
            </div>
        </div>
    </section>""")

        if features['has_menu']:
            sections.append(f"""
    <section id="menu" class="menu">
        <div class="container">
            <h2 class="section-title">Th·ª±c ƒë∆°n c·ªßa ch√∫ng t√¥i</h2>
            <div class="grid">
                <div class="card fade-in">
                    <img src="https://via.placeholder.com/300x200?text=M√≥n+ƒÇn+1" alt="Dish 1">
                    <h3>M√≥n ƒÉn 1</h3>
                    <p>M√¥ t·∫£ ng·∫Øn g·ªçn v·ªÅ m√≥n ƒÉn h·∫•p d·∫´n n√†y. ƒê∆∞·ª£c ch·∫ø bi·∫øn t·ª´ nguy√™n li·ªáu t∆∞∆°i ngon.</p>
                </div>
                <div class="card fade-in">
                    <img src="https://via.placeholder.com/300x200?text=M√≥n+ƒÇn+2" alt="Dish 2">
                    <h3>M√≥n ƒÉn 2</h3>
                    <p>M√¥ t·∫£ ng·∫Øn g·ªçn v·ªÅ m√≥n ƒÉn ƒë·∫∑c bi·ªát n√†y. H∆∞∆°ng v·ªã kh√≥ qu√™n.</p>
                </div>
                <div class="card fade-in">
                    <img src="https://via.placeholder.com/300x200?text=ƒê·ªì+U·ªëng+1" alt="Drink 1">
                    <h3>ƒê·ªì u·ªëng 1</h3>
                    <p>Th·ª©c u·ªëng gi·∫£i kh√°t, ho√†n h·∫£o cho m·ªçi b·ªØa ƒÉn.</p>
                </div>
            </div>
        </div>
    </section>""")

        if features['has_services']:
            sections.append(f"""
    <section id="services" class="services">
        <div class="container">
            <h2 class="section-title">D·ªãch v·ª• c·ªßa ch√∫ng t√¥i</h2>
            <div class="grid">
                <div class="card fade-in">
                    <i class="fas fa-desktop fa-3x"></i>
                    <h3>Thi·∫øt k·∫ø Web</h3>
                    <p>Ch√∫ng t√¥i cung c·∫•p d·ªãch v·ª• thi·∫øt k·∫ø web chuy√™n nghi·ªáp, hi·ªán ƒë·∫°i v√† t·ªëi ∆∞u cho m·ªçi thi·∫øt b·ªã.</p>
                </div>
                <div class="card fade-in">
                    <i class="fas fa-chart-line fa-3x"></i>
                    <h3>SEO & Marketing</h3>
                    <p>Gi√∫p website c·ªßa b·∫°n ƒë·∫°t th·ª© h·∫°ng cao tr√™n c√¥ng c·ª• t√¨m ki·∫øm v√† ti·∫øp c·∫≠n nhi·ªÅu kh√°ch h√†ng h∆°n.</p>
                </div>
                <div class="card fade-in">
                    <i class="fas fa-headset fa-3x"></i>
                    <h3>H·ªó tr·ª£ 24/7</h3>
                    <p>ƒê·ªôi ng≈© h·ªó tr·ª£ c·ªßa ch√∫ng t√¥i lu√¥n s·∫µn s√†ng gi·∫£i ƒë√°p m·ªçi th·∫Øc m·∫Øc c·ªßa b·∫°n.</p>
                </div>
            </div>
        </div>
    </section>""")
        
        if features['has_portfolio']:
            sections.append(f"""
    <section id="portfolio" class="portfolio">
        <div class="container">
            <h2 class="section-title">D·ª± √°n n·ªïi b·∫≠t c·ªßa ch√∫ng t√¥i</h2>
            <div class="grid">
                <div class="card fade-in">
                    <img src="https://via.placeholder.com/400x250?text=D·ª±+√°n+1" alt="Project 1">
                    <h3>D·ª± √°n E-commerce</h3>
                    <p>Ph√°t tri·ªÉn m·ªôt n·ªÅn t·∫£ng th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠ m·∫°nh m·∫Ω v√† d·ªÖ s·ª≠ d·ª•ng.</p>
                    <a href="#" class="btn btn-secondary">Xem d·ª± √°n</a>
                </div>
                <div class="card fade-in">
                    <img src="https://via.placeholder.com/400x250?text=D·ª±+√°n+2" alt="Project 2">
                    <h3>Website C√¥ng ty</h3>
                    <p>Thi·∫øt k·∫ø l·∫°i website c√¥ng ty v·ªõi giao di·ªán hi·ªán ƒë·∫°i v√† c·∫£i thi·ªán tr·∫£i nghi·ªám ng∆∞·ªùi d√πng.</p>
                    <a href="#" class="btn btn-secondary">Xem d·ª± √°n</a>
                </div>
                <div class="card fade-in">
                    <img src="https://via.placeholder.com/400x250?text=D·ª±+√°n+3" alt="Project 3">
                    <h3>·ª®ng d·ª•ng Di ƒë·ªông</h3>
                    <p>Ph√°t tri·ªÉn ·ª©ng d·ª•ng di ƒë·ªông cho c·∫£ iOS v√† Android, t√≠ch h·ª£p nhi·ªÅu t√≠nh nƒÉng.</p>
                    <a href="#" class="btn btn-secondary">Xem d·ª± √°n</a>
                </div>
            </div>
        </div>
    </section>""")

        if features['has_blog']:
            sections.append(f"""
    <section id="blog" class="blog">
        <div class="container">
            <h2 class="section-title">B√†i vi·∫øt m·ªõi nh·∫•t</h2>
            <div class="grid">
                <div class="card fade-in">
                    <img src="https://via.placeholder.com/400x250?text=Blog+Post+1" alt="Blog Post 1">
                    <h3>Xu h∆∞·ªõng thi·∫øt k·∫ø web 2024</h3>
                    <p>Kh√°m ph√° nh·ªØng xu h∆∞·ªõng m·ªõi nh·∫•t ƒë·ªãnh h√¨nh ng√†nh thi·∫øt k·∫ø web nƒÉm nay.</p>
                    <a href="#" class="btn btn-secondary">ƒê·ªçc th√™m</a>
                </div>
                <div class="card fade-in">
                    <img src="https://via.placeholder.com/400x250?text=Blog+Post+2" alt="Blog Post 2">
                    <h3>T·ªëi ∆∞u h√≥a SEO cho doanh nghi·ªáp nh·ªè</h3>
                    <p>Nh·ªØng m·∫πo v√† th·ªß thu·∫≠t ƒë·ªÉ c·∫£i thi·ªán th·ª© h·∫°ng SEO cho website c·ªßa b·∫°n.</p>
                    <a href="#" class="btn btn-secondary">ƒê·ªçc th√™m</a>
                </div>
                <div class="card fade-in">
                    <img src="https://via.placeholder.com/400x250?text=Blog+Post+3" alt="Blog Post 3">
                    <h3>L·ª£i √≠ch c·ªßa vi·ªác c√≥ m·ªôt website chuy√™n nghi·ªáp</h3>
                    <p>T·∫°i sao m·ªôt website ch·∫•t l∆∞·ª£ng l√† ƒëi·ªÅu c·∫ßn thi·∫øt cho m·ªçi doanh nghi·ªáp.</p>
                    <a href="#" class="btn btn-secondary">ƒê·ªçc th√™m</a>
                </div>
            </div>
        </div>
    </section>""")
        
        if features['has_gallery']:
            sections.append(f"""
    <section id="gallery" class="gallery">
        <div class="container">
            <h2 class="section-title">Th∆∞ vi·ªán ·∫£nh c·ªßa ch√∫ng t√¥i</h2>
            <div class="grid">
                <div class="gallery-item card fade-in">
                    <img src="https://via.placeholder.com/400x300?text=H√¨nh+·∫£nh+1" alt="Gallery Image 1">
                </div>
                <div class="gallery-item card fade-in">
                    <img src="https://via.placeholder.com/400x300?text=H√¨nh+·∫£nh+2" alt="Gallery Image 2">
                </div>
                <div class="gallery-item card fade-in">
                    <img src="https://via.placeholder.com/400x300?text=H√¨nh+·∫£nh+3" alt="Gallery Image 3">
                </div>
                <div class="gallery-item card fade-in">
                    <img src="https://via.placeholder.com/400x300?text=H√¨nh+·∫£nh+4" alt="Gallery Image 4">
                </div>
            </div>
        </div>
    </section>""")

        # Add a generic team section if specified in sections, but not as a main feature
        if 'team' in spec['sections'] and not any(f for f in features.values()): # Only if no specific feature leads to content and team is requested
             sections.append(f"""
    <section id="team" class="team">
        <div class="container">
            <h2 class="section-title">ƒê·ªôi ng≈© c·ªßa ch√∫ng t√¥i</h2>
            <div class="grid">
                <div class="card fade-in">
                    <img src="https://via.placeholder.com/150x150?text=Th√†nh+vi√™n+1" alt="Team Member 1" style="border-radius: 50%; margin-bottom: 1rem;">
                    <h3>Nguy·ªÖn VƒÉn A</h3>
                    <p>CEO & S√°ng l·∫≠p</p>
                    <p>V·ªõi nhi·ªÅu nƒÉm kinh nghi·ªám trong ng√†nh, anh A d·∫´n d·∫Øt ƒë·ªôi ng≈© v·ªõi t·∫ßm nh√¨n ƒë·ªôt ph√°.</p>
                </div>
                <div class="card fade-in">
                    <img src="https://via.placeholder.com/150x150?text=Th√†nh+vi√™n+2" alt="Team Member 2" style="border-radius: 50%; margin-bottom: 1rem;">
                    <h3>Tr·∫ßn Th·ªã B</h3>
                    <p>Tr∆∞·ªüng ph√≤ng K·ªπ thu·∫≠t</p>
                    <p>Ch·ªã B l√† b·ªô n√£o ph√≠a sau c√°c gi·∫£i ph√°p c√¥ng ngh·ªá ti√™n ti·∫øn c·ªßa ch√∫ng t√¥i.</p>
                </div>
                <div class="card fade-in">
                    <img src="https://via.placeholder.com/150x150?text=Th√†nh+vi√™n+3" alt="Team Member 3" style="border-radius: 50%; margin-bottom: 1rem;">
                    <h3>L√™ VƒÉn C</h3>
                    <p>Tr∆∞·ªüng ph√≤ng Marketing</p>
                    <p>Anh C mang ƒë·∫øn nh·ªØng chi·∫øn l∆∞·ª£c ti·∫øp th·ªã s√°ng t·∫°o, gi√∫p ch√∫ng t√¥i k·∫øt n·ªëi v·ªõi kh√°ch h√†ng.</p>
                </div>
            </div>
        </div>
    </section>""")


        return '\n'.join(sections)
    
    def _generate_contact_form(self):
        """T·∫°o m√£ HTML cho form li√™n h·ªá"""
        return """
                <div class="contact-form fade-in">
                    <h3 style="color: #2196f3; margin-bottom: 1.5rem;">G·ª≠i tin nh·∫Øn cho ch√∫ng t√¥i</h3>
                    <form>
                        <div class="form-group">
                            <label for="name">T√™n c·ªßa b·∫°n</label>
                            <input type="text" id="name" name="name" required>
                        </div>
                        <div class="form-group">
                            <label for="email">Email c·ªßa b·∫°n</label>
                            <input type="email" id="email" name="email" required>
                        </div>
                        <div class="form-group">
                            <label for="message">Tin nh·∫Øn c·ªßa b·∫°n</label>
                            <textarea id="message" name="message" rows="5" required></textarea>
                        </div>
                        <button type="submit" class="btn btn-primary" style="width: 100%;">G·ª≠i tin nh·∫Øn</button>
                    </form>
                </div>
        """

# --- Streamlit App ---
st.markdown("<h1 class='main-header'>üåê Project Genesis - Text to Website</h1>", unsafe_allow_html=True)

st.write("""
Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi **Project Genesis**! N·ªÅn t·∫£ng n√†y gi√∫p b·∫°n t·∫°o ra m·ªôt website chuy√™n nghi·ªáp ch·ªâ t·ª´ m√¥ t·∫£ vƒÉn b·∫£n. 
H√£y m√¥ t·∫£ trang web b·∫°n mu·ªën, v√† AI c·ªßa ch√∫ng t√¥i s·∫Ω t·∫°o ra m√£ ngu·ªìn HTML, CSS v√† JavaScript s·∫µn s√†ng ƒë·ªÉ tri·ªÉn khai.
""")

st.markdown("---")

# Input ng∆∞·ªùi d√πng
st.subheader("1. M√¥ t·∫£ trang web c·ªßa b·∫°n:")
user_input = st.text_area(
    "V√≠ d·ª•: 'T√¥i mu·ªën m·ªôt trang web c·ª≠a h√†ng b√°nh ng·ªçt c√≥ t√™n \"Sweet Delights\" v·ªõi m√†u s·∫Øc ch·ªß ƒë·∫°o l√† h·ªìng. Trang web c·∫ßn c√≥ c√°c trang s·∫£n ph·∫©m, gi·ªõi thi·ªáu v√† li√™n h·ªá.'",
    height=150,
    placeholder="Nh·∫≠p m√¥ t·∫£ chi ti·∫øt v·ªÅ trang web c·ªßa b·∫°n ·ªü ƒë√¢y..."
)

generator = WebsiteGenerator()

if st.button("T·∫°o Website"):
    if user_input:
        with st.spinner("ƒêang ph√¢n t√≠ch y√™u c·∫ßu v√† t·∫°o m√£ ngu·ªìn..."):
            time.sleep(2) # Simulate processing time
            spec = generator.analyze_input(user_input)
            
            html_code = generator.generate_html(spec)
            css_code = generator.generate_css(spec)
            js_code = generator.generate_js(spec)

        st.markdown("<div class='success-box'>üéâ Website c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!</div>", unsafe_allow_html=True)

        st.subheader("2. Xem l·∫°i th√¥ng s·ªë k·ªπ thu·∫≠t Website:")
        st.json(spec)

        st.subheader("3. M√£ ngu·ªìn ƒë√£ t·∫°o:")

        # Hi·ªÉn th·ªã c√°c tab cho HTML, CSS, JS
        tab1, tab2, tab3 = st.tabs(["HTML", "CSS", "JavaScript"])

        with tab1:
            st.code(html_code, language="html")
        with tab2:
            st.code(css_code, language="css")
        with tab3:
            st.code(js_code, language="javascript")

        st.subheader("4. T·∫£i xu·ªëng Website c·ªßa b·∫°n:")
        st.write("B·∫°n c√≥ th·ªÉ t·∫£i xu·ªëng to√†n b·ªô m√£ ngu·ªìn website d∆∞·ªõi d·∫°ng file ZIP.")

        # T·∫°o file ZIP trong b·ªô nh·ªõ
        zip_buffer = BytesIO()
        with zipfile.ZipFile(zip_buffer, "a", zipfile.ZIP_DEFLATED, False) as zip_file:
            zip_file.writestr("index.html", html_code)
            zip_file.writestr("styles.css", css_code)
            zip_file.writestr("script.js", js_code)
            # Th√™m placeholder images n·∫øu c·∫ßn thi·∫øt (t√πy ch·ªçn)
            # zip_file.writestr("images/placeholder_cake_banner.jpg", requests.get("https://via.placeholder.com/1200x400?text=Banner").content)

        zip_buffer.seek(0)
        st.download_button(
            label="T·∫£i xu·ªëng Website (.zip)",
            data=zip_buffer,
            file_name=f"{spec['site_name'].replace(' ', '_').lower()}_{datetime.now().strftime('%Y%m%d_%H%M%S')}.zip",
            mime="application/zip",
        )

        st.markdown("---")
        st.info("""
        **B∆∞·ªõc ti·∫øp theo:** Sau khi t·∫£i xu·ªëng, b·∫°n c√≥ th·ªÉ gi·∫£i n√©n file ZIP v√† m·ªü `index.html` trong tr√¨nh duy·ªát ƒë·ªÉ xem website c·ªßa m√¨nh.
        ƒê·ªÉ tri·ªÉn khai website l√™n internet, b·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng c√°c d·ªãch v·ª• nh∆∞ Vercel, Netlify ho·∫∑c GitHub Pages.
        """)
    else:
        st.warning("Vui l√≤ng nh·∫≠p m√¥ t·∫£ trang web c·ªßa b·∫°n ƒë·ªÉ b·∫Øt ƒë·∫ßu!")

st.markdown("---")
st.markdown("""
<div style="text-align: center; color: #667eea;">
    <p>ƒê∆∞·ª£c ph√°t tri·ªÉn v·ªõi ni·ªÅm ƒëam m√™ b·ªüi Nh√≥m AI c·ªßa b·∫°n.</p>
</div>
""", unsafe_allow_html=True)